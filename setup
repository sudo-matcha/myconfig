#!/usr/bin/bash

if [ $HOME != "/root" ]; then
	echo "please run me as root (or with sudo)!"
	exit 1
fi

function bincheck {
    # Default value for $install
    install_cmd_default="apt install \$package"
    install_cmd="$install_cmd_default"

    # Parse arguments
    while [[ "$1" == --* ]]; do
        case "$1" in
            --install-cmd)
                shift
                install_cmd="$1"
                shift
                ;;
            *)
                echo "Unknown option: $1"
                exit 1
                ;;
        esac
    done

    # Remaining arguments are treated as package names
    packages=$@
    for package in $packages; do

        which $package > /dev/null
        if [ $? != 0 ]; then
            echo -e "\e[1;31mE\e[0m: $package is not installed"
            read -p "Install $package? [Y/n] " conf
            case "$conf" in
            y|Y|"" )
                install_cmd_to_run=$(eval echo "$install_cmd")
                eval $install_cmd_to_run
                ;;
            n|N ) continue;;
            * ) echo "Invalid Option"; exit 1;;
            esac
        else
            echo -e "\e[1;34mI\e[0m: $package is already installed"
        fi
    done
}


# check for packages
bincheck kitty micro zoxide zsh

if [ -f "/home/$SUDO_USER/.zshrc" ]; then
    if cat "/home/$SUDO_USER/.zshrc" | grep 'eval "$(zoxide init --cmd cd zsh)"' >> /dev/null; then
        echo -e "\e[1;34mI\e[0m: zoxide init eval is already in ~/.zshrc"
    else
        read -p "Add zoxide init to .zshrc? [Y/n] " conf
        case "$conf" in
            y|Y|"" ) echo 'eval "$(zoxide init --cmd cd zsh)"' >> "/home/$SUDO_USER/.zshrc" ;;
            n|N ) :;;
            * ) echo "Invalid Option"; exit 1;;
        esac
    fi
fi

if [ $(getent passwd $SUDO_USER | cut -d: -f7) != $(which zsh) ]; then
    echo -e "\e[1;33mW\e[0m: zsh is not set as your login shell"
    read -p "Set $SUDO_USER's login shell to zsh? [Y/n] " conf
    case "$conf" in
        y|Y|"" ) usermod -s $(which zsh) $SUDO_USER;;
        n|N ) :;;
        * ) echo "Invalid Option"; exit 1;;
    esac
else
	echo -e "\e[1;34mI\e[0m: zsh is already set as your login shell"
fi

bincheck --install-cmd "curl -fsSL lure.sh/install | bash" lure
bincheck --install-cmd "sudo -u $SUDO_USER lure in hyfetch" hyfetch

# checks for scripts and other non-packages
## omz
if [ ! -d /home/$SUDO_USER/.oh-my-zsh ]; then
	echo -e "\e[1;31mE\e[0m: oh-my-zsh is not installed"
	read -p "Install oh-my-zsh? [Y/n] " conf
	case "$conf" in
	y|Y|"" ) sudo -u $SUDO_USER sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" ;;
	n|N ) :;;
	* ) echo "Invalid Option"; exit 1;;
	esac
else
	echo -e "\e[1;34mI\e[0m: oh-my-zsh is already installed"
fi

## powerlevel10k theme
if [ ! -f /home/$SUDO_USER/.p10k.zsh ]; then
	echo -e "\e[1;31mE\e[0m: powerlevel10k theme is not installed"
	read -p "Install powerlevel10k omz theme? [Y/n] " conf
	case "$conf" in
	y|Y|"" ) 
		if [ ! -d ${ZSH_CUSTOM:-/home/$SUDO_USER/.oh-my-zsh/custom}/themes/powerlevel10k ];then
			git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-/home/$SUDO_USER/.oh-my-zsh/custom}/themes/powerlevel10k;
		fi
		# echo 'ZSH_THEME="powerlevel10k/powerlevel10k"' >> /home/$SUDO_USER/.zshrc
		echo "/home/$SUDO_USER/.zshrc" | xargs sed -i "s|robbyrussell|powerlevel10k\/powerlevel10k|g"
		echo "Installed p10k theme, the setup wizard will run on the next execution of zsh" 
		;;
	n|N ) :;;
	* ) echo "Invalid Option"; exit 1;;
	esac
else
	echo -e "\e[1;34mI\e[0m: powerlevel10k theme is already installed"
fi
